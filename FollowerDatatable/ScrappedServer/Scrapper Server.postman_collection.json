{
	"info": {
		"_postman_id": "c6674a42-2d7f-462e-8267-7241cc8a8f93",
		"name": "Scrapper Server",
		"description": "Source Code:\n\n[https://github.com/imvickykumar999/Selenium-Web-Scrape/tree/main/FollowerDatatable](https://github.com/imvickykumar999/Selenium-Web-Scrape/tree/main/FollowerDatatable)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14965750",
		"_collection_link": "https://gold-trinity-363196.postman.co/workspace/GitHub-Views-Tracker~d48918f1-45f9-4583-b551-b9e5c7e535d1/collection/14965750-c6674a42-2d7f-462e-8267-7241cc8a8f93?action=share&source=collection_link&creator=14965750"
	},
	"item": [
		{
			"name": "Fetch Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check if influencer data is available\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
							"    console.log(\"Total influencers: \" + jsonData.length);\r",
							"});\r",
							"\r",
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Influencer Profile Links</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response}}\r",
							"        <tr>\r",
							"            <td>{{this}}</td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return {response: pm.response.json()}\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Set dynamic values or headers before the request is sent\r",
							"\r",
							"// 1. Generate a dynamic timestamp\r",
							"pm.variables.set(\"timestamp\", new Date().toISOString());\r",
							"\r",
							"// 2. Set a dynamic token (if needed, you can generate or use from environment)\r",
							"var token = pm.environment.get(\"authToken\") || \"your-default-token\";\r",
							"pm.variables.set(\"authToken\", token);\r",
							"\r",
							"// 3. Log to console for debugging purposes\r",
							"console.log(\"Pre-request script executed, timestamp: \" + pm.variables.get(\"timestamp\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authorization",
						"value": "cbvcasdghcvsdhcvjhsdgjhasdjhsdadjasjdjkhasjhdgjasd",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://scrappedserver.pythonanywhere.com/get_influencer_profile_links/?platform=Instagram",
					"protocol": "https",
					"host": [
						"scrappedserver",
						"pythonanywhere",
						"com"
					],
					"path": [
						"get_influencer_profile_links",
						""
					],
					"query": [
						{
							"key": "platform",
							"value": "Instagram"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Follower Count",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authorization",
						"value": "cbvcasdghcvsdhcvjhsdgjhasdjhsdadjasjdjkhasjhdgjasd",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userid\": 105168,\r\n    \"platformname\": \"Instagram\",\r\n    \"followers\": 213,\r\n    \"platformcredential\": \"divyabhatia98\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://scrappedserver.pythonanywhere.com/myendpoint",
					"protocol": "https",
					"host": [
						"scrappedserver",
						"pythonanywhere",
						"com"
					],
					"path": [
						"myendpoint"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Datatable",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://scrappedserver.pythonanywhere.com/get_influencer_data",
					"protocol": "https",
					"host": [
						"scrappedserver",
						"pythonanywhere",
						"com"
					],
					"path": [
						"get_influencer_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show Datatable",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://scrappedserver.pythonanywhere.com",
					"protocol": "https",
					"host": [
						"scrappedserver",
						"pythonanywhere",
						"com"
					]
				}
			},
			"response": []
		}
	]
}